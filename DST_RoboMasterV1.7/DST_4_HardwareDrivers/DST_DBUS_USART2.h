#ifndef __DST_DBUS_USART2_H__
#define __DST_DBUS_USART2_H__
/****************************************************************************************/
/*========================================================================================
//		DDDDD       SSSSSS	  TTTTTTTT      
//		DD   DD    SSS					 TT						
//		DD   DD		   SSSS        TT 					DST_RoboMaster
//		DD	 DD         SSS      TT						YSU_RoboHunter && YSU_RoboBlade
//		DDDDD       SSSSSS       TT						Author:Dstone		
========================================================================================*/
/****************************************************************************************/

#include "DST_RoboMasterInclude.h"




class DST_DBUS_USART2{

public:
	
	u8 dbus_rx_buffer[18];


	/* DBUS遥控数据接收，数据帧格式：
	 * 遥控信息：
   * --------------------------------------------------------------------
   * |  域  |  通道0  |  通道1  |  通道2  |  通道3  |    S1   |    S2   |
	 * |------|――-----|---------|---------|---------|---------|---------|
	 * | 偏移 |    0    |   11    |    22   |    33   |    44   |    46   |    
	 * |------|――-----|---------|---------|---------|---------|---------|
	 * | 长度 |   11    |   11    |    11   |   11    |     2   |    2    |    
	 * |------|――-----|---------|---------|---------|---------|---------|
	 * |      |最大1684 |最大1684 |最大1684 |最大1684 |最大  3  |最大  3  |
	 * | 范围 |中间1024 |中间1024 |中间1024 |中间1024 |中间  2  |中间  2  |
	 * |      |最小 364 |最小 364 |最小 364 |最小 364 |最小  1  |最小  1  |
   * --------------------------------------------------------------------
	 * 鼠标信息：
	 * ----------------------------------------------------------------------
	 * |  域  |  鼠标x轴  |  鼠标y轴  |  鼠标z轴  |  鼠标左键  |  鼠标右键  |
	 * |------|――-------|-----------|-----------|------------|------------|
	 * | 偏移 |     48    |     64    |     80    |     86     |     94     |
	 * |------|――-------|-----------|-----------|------------|------------|
	 * | 长度 |     16    |     16    |     16    |      8     |      8     |
	 * |------|――-------|-----------|-----------|------------|------------|
	 * |      |最大  32767|最大  32767|最大  32767|最大  1     |最大  1     |
	 * | 范围 |最小 -32768|最小 -32768|最小 -32768|最小  0     |最小  0     |
	 * |      |静止值  0  |静止值  0  |静止值  0  |            |            |
	 * ----------------------------------------------------------------------
	 * 键盘信息：
	 * ---------――-------------------------
	 * |  域  | 按键									      |
	 * |------|――-------------------------|
	 * | 偏移 | 102													|
	 * |------|――-------------------------|
	 * | 长度 | 16  												|
	 * |------|――-------------------------|
	 * |      |bit0 -----> W键              |
	 * | 功能 |bit1 -----> S键              |
	 * |      |bit2 -----> A键              |
	 * |      |bit3 -----> D键              |
	 * |      |bit4 -----> Q键              |
	 * |      |bit5 -----> E键              |
	 * |      |bit6 -----> Shift键  			  |
	 * |      |bit7 -----> Ctrl键     			|
	 * --------------------------------------
	 */
	 //遥控数据结构体
	typedef struct 
	{
		struct 
		{ 
			int16_t ch0; 
			int16_t ch1; 
			int16_t ch2; 
			int16_t ch3; 
			int8_t s1; 
			int8_t s2; 
		}rc_660; 
		struct 
		{ 
			int16_t ch0; 
			int16_t ch1; 
			int16_t ch2; 
			int16_t ch3; 
			int8_t s1; 
			int8_t s2; 
		}rc_2000;
		struct 
		{ 
			int16_t x; 
			int16_t y; 
			int16_t z; 
			uint8_t press_l; 
			uint8_t press_r; 
		}mouse; 
		struct 
		{ 
			uint16_t v; 
		}key; 
	}RC_Ctl_t; 

	//初始化一个遥控数据结构体
	RC_Ctl_t RC_Ctl;

	DST_DBUS_USART2();

	//USART2	DMA初始化配置函数
	void USART2_DMA_Init(void);

private:
	
};
extern DST_DBUS_USART2 dbus;

























#endif









